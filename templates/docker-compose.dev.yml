version: "3.9"
services:
  app.test:
    extends:
      file: docker-compose.base.yml
      service: app.test
    ports:
      - "${APP_PORT}:80"
    depends_on:
      - mysql
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
  node:
    extends:
      file: docker-compose.base.yml
      service: node
  mysql:
    extends:
      file: docker-compose.base.yml
      service: mysql
    ports:
      - "${DB_PORT}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: "${DB_ROOT_PASS}"
      MYSQL_PASSWORD: "${DB_PASS}"
      MYSQL_DATABASE: "${DB_NAME}"
      MYSQL_USER: "${DB_USER}"
      MARIADB_ROOT_PASSWORD: "${DB_ROOT_PASS}"
      MARIADB_USER: "${DB_USER}"
      MARIADB_PASSWORD: "${DB_PASS}"
      MARIADB_DATABASE: "${DB_NAME}"
    expose:
      - 3306
    volumes:
      - mysqldata:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping"]
    restart: always
  redis:
    extends:
      file: docker-compose.base.yml
      service: redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
    restart: unless-stopped
  mailhog:
    extends:
      file: docker-compose.base.yml
      service: mailhog
    ports:
      - "${FORWARD_MAILHOG_PORT:-1025}:1025"
      - "${FORWARD_MAILHOG_DASHBOARD_PORT:-8025}:8025"
    restart: unless-stopped
networks:
  docker-network:
    driver: "bridge"
volumes:
  mysqldata:
    driver: "local"
  redisdata:
    driver: "local"
